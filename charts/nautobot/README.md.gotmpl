{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.sourcesSection" . }}

<!-- This README.md.gotmpl is used by helm-docs to generate README.md which in turn generates the information on https://artifacthub.io/packages/helm/nautobot/nautobot so there are parts of this which are duplicated from `docs` -->
## Documentation

Please see our [official documentation site](https://docs.nautobot.com/projects/helm-charts/en/latest/) for more information.

<!-- This section is a duplicate of docs/installation/prerequisites.md -->
## Prerequisites

* Kubernetes 1.24 or newer (older versions of Kubernetes may work, however, we try to keep this chart updated to [supported versions of Kubernetes](https://kubernetes.io/releases/))
* Helm 3.1.x or newer ([installation](https://helm.sh/docs/helm/helm_install/))
* Persistent Volume (PV) provisioning support (Required if deploying the [PostgreSQL chart](https://artifacthub.io/packages/helm/bitnami/postgresql))

## Quick Start

### Add the Nautobot Helm Repo

```no-highlight
helm repo add nautobot https://nautobot.github.io/helm-charts/
```

### Install the Nautobot Chart from the Nautobot repo

To install the chart with the release name `nautobot` (NOTE: the release name is a label completely up to the user) DB and Redis passwords are required:

```no-highlight
helm install nautobot nautobot/nautobot --set postgresql.auth.password="change-me" --set redis.auth.password="change-me"
```

This command deploys Nautobot, on the Kubernetes cluster, in the default configuration. The [Values](#values) section lists the parameters that can be customized during installation.

> **Tip**: List all releases using `helm list`

<!-- This section is a duplicate of docs/installation/basic.md the Accessing Nautobot section -->
## Accessing Nautobot

Immediately after install Helm will present the user with help text similar to the following:

```no-highlight
*********************************************************************
*** PLEASE BE PATIENT: Nautobot may take a few minutes to install ***
*********************************************************************

1. Get the Nautobot URL:

  echo "Nautobot URL: http://127.0.0.1:8080/"
  kubectl port-forward --namespace default svc/nautobot 8080:80

2. Get your Nautobot login admin credentials by running:

  echo Username: admin
  echo Password: $(kubectl get secret --namespace default nautobot-env -o jsonpath="{.data.NAUTOBOT_SUPERUSER_PASSWORD}" | base64 --decode)
  echo api-token: $(kubectl get secret --namespace default nautobot-env -o jsonpath="{.data.NAUTOBOT_SUPERUSER_API_TOKEN}" | base64 --decode)
```

This message should include basic information about connecting to Nautobot as well as accessing the superuser credentials if they were created.  Nautobot can take several minutes to deploy,
you will need to wait until that is complete before accessing Nautobot.

After several minutes, by default, a Nautobot super user will be created and you will be able to log in to Nautobot.  The default username is `admin` and the default password
was randomly generated by helm, you can find the password by running the following command:

```no-highlight
kubectl get secret nautobot-env -o jsonpath="{.data.NAUTOBOT_SUPERUSER_PASSWORD}" | base64 --decode
```

## Nautobot Application Values

TODO Update Nautobot Application Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| nautobot.allowedHosts | string | `"*"` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#allowed_hosts) Space separated list of Nautobot allowed hosts (NAUTOBOT_ALLOWED_HOSTS)<sup>[1](#notes)</sup> |
| nautobot.config | string | `""` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/) Replace the entire `nautobot_config.py` file with this value<sup>[1](#notes)</sup> |
| nautobot.db.engine | string | `"django.db.backends.postgresql"` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#databases) Nautobot database engine, valid values: `django.db.backends.postgresql` and `django.db.backends.mysql` (NAUTOBOT_DB_ENGINE)<sup>[1](#notes)</sup> |
| nautobot.db.existingSecret | string | `""` | Name of existing secret to use for Database passwords<sup>[1](#notes)</sup> |
| nautobot.db.existingSecretPasswordKey | string | `"NAUTOBOT_DB_PASSWORD"` | Password key to be retrieved from existing secret<sup>[1](#notes)</sup> |
| nautobot.db.host | string | `"postgres"` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#databases) Nautobot external database hostname, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_HOST)<sup>[1](#notes)</sup> |
| nautobot.db.name | string | `"nautobot"` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#databases) Nautobot external database name, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_NAME)<sup>[1](#notes)</sup> |
| nautobot.db.password | string | `""` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#databases) Nautobot external database password, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_PASSWORD)<sup>[1](#notes)</sup> |
| nautobot.db.port | int | `5432` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#databases) Nautobot external database port, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_PORT)<sup>[1](#notes)</sup> |
| nautobot.db.timeout | int | `300` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#databases) Nautobot database timeout (NAUTOBOT_DB_TIMEOUT)<sup>[1](#notes)</sup> |
| nautobot.db.user | string | `"nautobot"` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#databases) Nautobot external database username, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_USER)<sup>[1](#notes)</sup> |
| nautobot.debug | bool | `false` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/optional-settings/#debug) Enable Nautobot Debug (NAUTOBOT_DEBUG)<sup>[1](#notes)</sup> |
| nautobot.extraVars | list | `[]` | An array of environment variable objects (`name` and `value` are required) to add to ALL Nautobot and Nautobot Worker related deployments<sup>[1](#notes)</sup> |
| nautobot.logLevel | string | `"INFO"` | Log Level used for Celery logging, valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`<sup>[1](#notes)</sup> |
| nautobot.metrics | bool | `true` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/optional-settings/#metrics_enabled) Enable Prometheus metrics endpoint (NAUTOBOT_METRICS_ENABLED)<sup>[1](#notes)</sup> |
| nautobot.redis.existingSecret | string | `""` | Name of existing secret to use for Redis passwords<sup>[1](#notes)</sup> |
| nautobot.redis.existingSecretPasswordKey | string | `"NAUTOBOT_REDIS_PASSWORD"` | Password key to be retrieved from existing secret<sup>[1](#notes)</sup> |
| nautobot.redis.host | string | `""` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#rq_queues) Nautobot external Redis hostname, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_HOST)<sup>[1](#notes)</sup> |
| nautobot.redis.password | string | `""` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#rq_queues) Nautobot external Redis password, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_PASSWORD)<sup>[1](#notes)</sup> |
| nautobot.redis.port | int | `6379` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#rq_queues) Nautobot external Redis port, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_PORT)<sup>[1](#notes)</sup> |
| nautobot.redis.ssl | bool | `false` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#rq_queues) Nautobot external Redis ssl enabled, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_SSL)<sup>[1](#notes)</sup> |
| nautobot.redis.username | string | `""` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#rq_queues) Nautobot external Redis username, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_USERNAME)<sup>[1](#notes)</sup> |
| nautobot.secretKey | string | `""` | [ref](https://docs.nautobot.com/projects/core/en/stable/configuration/required-settings/#secret_key) Nautobot Secret Key (NAUTOBOT_SECRET_KEY)<sup>[1](#notes)</sup> |
| nautobot.superUser.apitoken | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_superuser_api_token) Configure an API key for the super user if `nautobot.superUser.enabled` is `true` (NAUTOBOT_SUPERUSER_API_TOKEN)<sup>[1](#notes)</sup> |
| nautobot.superUser.email | string | `"admin@example.com"` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_superuser_email) Configure an email address for the super user if `nautobot.superUser.enabled` is `true` (NAUTOBOT_SUPERUSER_EMAIL)<sup>[1](#notes)</sup> |
| nautobot.superUser.enabled | bool | `true` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_create_superuser) Create a new super user account in Nautobot once deployed (NAUTOBOT_CREATE_SUPERUSER)<sup>[1](#notes)</sup> |
| nautobot.superUser.password | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_superuser_password) Password to use for the super user to be created if `nautobot.superUser.enabled` is `true` (NAUTOBOT_SUPERUSER_NAME), if unset a random password will be generated<sup>[1](#notes)</sup> |
| nautobot.superUser.username | string | `"admin"` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_superuser_name) User name to use for the super user to be created if `nautobot.superUser.enabled` is `true` (NAUTOBOT_SUPERUSER_NAME)<sup>[1](#notes)</sup> |
| nautobot.uWSGIini | string | `""` | [ref](https://uwsgi-docs.readthedocs.io/en/latest/Configuration.html) Replace the entire `uwsgi.ini` file with this value<sup>[1](#notes)</sup> |
| nautobot.updateStrategy.type | string | `"RollingUpdate"` | [ref](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies) Nautobot Deployment strategy type |
| nautobot.uwsgi.listen | int | `128` | [ref](set the socket listen queue size) Set the uWSGI socket listen queue size.<sup>[1](#notes)</sup> |
| nautobot.uwsgi.processes | int | `3` | [ref](https://uwsgi-docs.readthedocs.io/en/latest/Options.html#processes) Spawn the specified number of workers/processes<sup>[1](#notes)</sup> |
| nautobot.uwsgi.threads | int | `2` | [ref](https://uwsgi-docs.readthedocs.io/en/latest/Options.html#threads) Run each worker in prethreaded mode with the specified number of threads<sup>[1](#notes)</sup> |

## Nautobot as a subchart

When using Nautobot as a subchart make sure to include the following in your Chart.yaml:

```yaml
dependencies:
  - condition: "nautobot.enabled"
    name: "nautobot"
    repository: "https://nautobot.github.io/helm-charts/"
    version: "1.x.x"
```

The `global` values will be shared between the parent and child charts.  Nautobot can be enabled by setting `nautobot.enabled` to `true`.  Other Nautobot settings would then be found under the `nautobot` key in your parent chart's yaml file.  For more information on subcharts checkout the [helm documentation](https://helm.sh/docs/chart_template_guide/subcharts_and_globals/).

## Upgrading

See [Upgrading](https://docs.nautobot.com/projects/helm-charts/en/latest/operations/upgrading)


## Uninstalling the Chart

See [Uninstall](https://docs.nautobot.com/projects/helm-charts/en/latest/operations/uninstall)

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

## Notes

1. These are global values which apply to all Nautobot and Celery pods, these can not be overridden by the `nautobots` or `workers` dictionaries.
