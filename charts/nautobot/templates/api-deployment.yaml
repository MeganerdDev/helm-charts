---
{{- if .Values.nautobot.apiEndpoint.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-api
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: nautobot-api
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.nautobot.apiEndpoint.autoscaling.enabled }}
  replicas: {{ .Values.nautobot.replicaCount | int }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.nautobot.revisionHistoryLimit | int }}
  {{- if .Values.nautobot.updateStrategy }}
  strategy: {{- toYaml .Values.nautobot.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: nautobot-api
  template:
    metadata:
      {{- if .Values.nautobot.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: nautobot-api
        {{- if .Values.nautobot.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ template "nautobot.serviceAccountName" . }}
      {{- end }}
      {{- include "nautobot.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.nautobot.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.nautobot.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.nautobot.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.nautobot.podAffinityPreset "component" "nautobot" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.nautobot.podAntiAffinityPreset "component" "nautobot" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nautobot.nodeAffinityPreset.type "key" .Values.nautobot.nodeAffinityPreset.key "values" .Values.nautobot.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nautobot.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.nautobot.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.nautobot.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.nautobot.priorityClassName }}
      priorityClassName: {{ .Values.nautobot.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.nautobot.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.nautobot.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.nautobot.nginx.enabled }}
        # This container is used to copy the self-signed SSL certs from the Nautobot pod to the nginx pod and changes the permission
        - name: nautobot-certs-api
          image: {{ template "nautobot.image" . }}
          imagePullPolicy: {{ .Values.nautobot.image.pullPolicy }}
          {{- if .Values.nautobot.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          command:
            - "/bin/bash"
          args:
            - "-c"
            - "cp /opt/nautobot/nautobot.* /opt/certs && chmod g+r /opt/certs/nautobot.* && ls -l /opt/certs/*"
          env:
            {{- if .Values.nautobot.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "common.names.fullname" . }}-env
            - secretRef:
                name: {{ include "common.names.fullname" . }}-env
            {{- if .Values.nautobot.extraEnvVarsCM }}
            {{- range .Values.nautobot.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" . "context" $) }}
            {{- end }}
            {{- end }}
            {{- if .Values.nautobot.extraEnvVarsSecret }}
            {{- range .Values.nautobot.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" . "context" $) }}
            {{- end }}
            {{- end }}
          {{- if .Values.nautobot.resources }}
          resources: {{- toYaml .Values.nautobot.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "nautobot-certs"
              mountPath: "/opt/certs"
            {{- if .Values.nautobot.extraVolumeMounts }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.nautobot.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- end }}
        {{- if .Values.nautobot.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: nautobot-api
          tty: true
          image: {{ template "nautobot.image" . }}
          imagePullPolicy: {{ .Values.nautobot.image.pullPolicy }}
          {{- if .Values.nautobot.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.nautobot.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.nautobot.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.nautobot.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.nautobot.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.nautobot.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "common.names.fullname" . }}-env
            - secretRef:
                name: {{ include "common.names.fullname" . }}-env
            {{- if .Values.nautobot.extraEnvVarsCM }}
            {{- range .Values.nautobot.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" . "context" $) }}
            {{- end }}
            {{- end }}
            {{- if .Values.nautobot.extraEnvVarsSecret }}
            {{- range .Values.nautobot.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" . "context" $) }}
            {{- end }}
            {{- end }}
          {{- if .Values.nautobot.resources }}
          resources: {{- toYaml .Values.nautobot.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.nautobot.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.nautobot.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.nautobot.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.nautobot.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "git-repos"
              mountPath: "/opt/nautobot/git"
            - name: "nautobot-config"
              mountPath: "/opt/nautobot/uwsgi.ini"
              subPath: "uwsgi.ini"
            {{- if .Values.nautobot.config }}
            - name: "nautobot-config"
              mountPath: "/opt/nautobot/nautobot_config.py"
              subPath: "nautobot_config.py"
            {{- end }}
            {{- if .Values.nautobot.extraVolumeMounts }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.nautobot.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          ports:
            {{- if not .Values.nautobot.nginx.enabled }}
            - name: "https"
              containerPort: 8443
            - name: "http"
              containerPort: 8080
            {{ else }}
            - name: "http"
              containerPort: 8003
            {{ end }}
        {{- if .Values.nautobot.nginx.enabled }}
        - name: nginx-api
          image: {{ template "nautobot.nginx.image" . }}
          imagePullPolicy: {{ .Values.nautobot.nginx.image.pullPolicy }}
          {{- if .Values.nautobot.nginx.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.nginx.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.nautobot.nginx.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.nautobot.nginx.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.nautobot.nginx.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.nautobot.nginx.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.nautobot.nginx.extraEnvVarsCM }}
            {{- range .Values.nautobot.nginx.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" . "context" $) }}
            {{- end }}
            {{- end }}
            {{- if .Values.nautobot.nginx.extraEnvVarsSecret }}
            {{- range .Values.nautobot.nginx.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" . "context" $) }}
            {{- end }}
            {{- end }}
          {{- if .Values.nautobot.nginx.resources }}
          resources: {{- toYaml .Values.nautobot.nginx.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.nautobot.nginx.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.nautobot.nginx.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.nautobot.nginx.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.nautobot.nginx.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "nginx-config"
              mountPath: "/etc/nginx/conf.d"
              readOnly: true
            - name: "nautobot-certs"
              mountPath: "/opt/nautobot_certs"
              readOnly: true
          ports:
            - name: "https"
              containerPort: 8443
            - name: "http"
              containerPort: 8080
            - name: "metrics"
              containerPort: 8002
        {{- end }}
        {{- if and .Values.metrics.enabled .Values.metrics.nginxExporter.enabled }}
        - name: nginx-exporter-api
          image: {{ template "nautobot.nginxExporter.image" . }}
          imagePullPolicy: {{ .Values.metrics.nginxExporter.image.pullPolicy }}
          {{- if .Values.metrics.nginxExporter.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.metrics.nginxExporter.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          args:
            - -nginx.scrape-uri=http://localhost:8002
          {{- if .Values.metrics.nginxExporter.resources }}
          resources: {{- toYaml .Values.metrics.nginxExporter.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.metrics.nginxExporter.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metrics.nginxExporter.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.metrics.nginxExporter.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metrics.nginxExporter.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          ports:
            - name: "nginxmetrics"
              containerPort: 9113
        {{- end }}
        {{- if and .Values.metrics.enabled .Values.metrics.uwsgiExporter.enabled }}
        - name: uwsgi-exporter-api
          image: {{ template "nautobot.uwsgiExporter.image" . }}
          imagePullPolicy: {{ .Values.metrics.uwsgiExporter.image.pullPolicy }}
          {{- if .Values.metrics.uwsgiExporter.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.metrics.uwsgiExporter.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          args:
            - "--stats.uri=http://localhost:1717"
          {{- if .Values.metrics.uwsgiExporter.resources }}
          resources: {{- toYaml .Values.metrics.uwsgiExporter.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.metrics.uwsgiExporter.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metrics.uwsgiExporter.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.metrics.uwsgiExporter.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metrics.uwsgiExporter.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          ports:
            - name: "uwsgimetrics"
              containerPort: 9117
        {{- end }}
        {{- if .Values.nautobot.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.nautobot.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: "git-repos"
          emptyDir: {}
        - name: "nautobot-config"
          configMap:
            name: {{ include "common.names.fullname" . }}-config
        {{- if .Values.nautobot.nginx.enabled }}
        - name: "nginx-config"
          configMap:
            name: {{ include "common.names.fullname" . }}-nginx-config
        {{- end }}
        {{- if .Values.nautobot.nginx.enabled }}
        - name: "nautobot-certs"
          emptyDir: {}
        {{- end }}
        {{- if .Values.nautobot.extraVolumes }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.nautobot.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
