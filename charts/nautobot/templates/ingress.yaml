---
{{- if .Values.ingress.enabled }}
apiVersion: {{ include "common.capabilities.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if (or .Values.ingress.annotations .Values.commonAnnotations) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" (merge .Values.ingress.annotations .Values.commonAnnotations) "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.ingressClassName (include "common.ingress.supportsIngressClassname" .) }}
  ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
  {{- end }}
  rules:
    {{- if .Values.ingress.hostname }}
    - host: {{ .Values.ingress.hostname }}
      http:
        paths:
          {{- if .Values.nautobot.apiEndpoint.enabled }}
          - path: {{ .Values.ingress.path }}api
            {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" (printf "%s%s" (include "common.names.fullname" .) "-api") "servicePort" (default "https" .Values.ingress.backendProtocol) "context" $)  | nindent 14 }}
          {{- end }}
          {{- if .Values.nautobot.graphqlEndpoint.enabled }}
          - path: {{ .Values.ingress.path }}graphql
            {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" (printf "%s%s" (include "common.names.fullname" .) "-graphql") "servicePort" (default "https" .Values.ingress.backendProtocol) "context" $)  | nindent 14 }}
          {{- end }}
          {{- if .Values.ingress.extraPaths }}
          {{- toYaml .Values.ingress.extraPaths | nindent 10 }}
          {{- end }}
          - path: {{ .Values.ingress.path }}
            {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" .) "servicePort" (default "https" .Values.ingress.backendProtocol) "context" $)  | nindent 14 }}
    {{- end }}
    {{- range .Values.ingress.extraHosts }}
    - host: {{ .hostname | quote }}
      http:
        paths:
          {{- if .Values.nautobot.apiEndpoint.enabled }}
          - path: {{ .Values.ingress.path }}api
            {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" (printf "%s%s" (include "common.names.fullname" .) "-api") "servicePort" (default "https" .Values.ingress.backendProtocol) "context" $)  | nindent 14 }}
          {{- end }}
          {{- if .Values.nautobot.graphqlEndpoint.enabled }}
          - path: {{ .Values.ingress.path }}graphql
            {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" (printf "%s%s" (include "common.names.fullname" .) "-graphql") "servicePort" (default "https" .Values.ingress.backendProtocol) "context" $)  | nindent 14 }}
          {{- end }}
          {{- if .extraPaths }}
          {{- toYaml .extraPaths | nindent 10 }}
          {{- end }}
          - path: {{ default "/" .path }}
            {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
            pathType: {{ default "Prefix" .pathType }}
            {{- end }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" $) "servicePort" (default "https" .backendProtocol) "context" $) | nindent 14 }}
    {{- end }}
  {{- if or .Values.ingress.tls .Values.ingress.extraTls }}
  tls:
    {{- if .Values.ingress.tls }}
    - hosts:
        - {{ .Values.ingress.hostname }}
      secretName: {{ .Values.ingress.secretName }}
    {{- end }}
    {{- if .Values.ingress.extraTls }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.extraTls "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
{{- end }}
